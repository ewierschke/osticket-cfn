{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template deploys a MySQL-flavored Aurora database to support osTicket.",
  "Metadata": {},
  "Parameters": {
    "DbAdminName": {
      "Type": "String",
      "Description": "Name of the osTicket master database-user.",
      "MinLength": "1",
      "MaxLength": "16"
    },
    "DbAdminPass": {
      "Type": "String",
      "Description": "Password of the osTicket master database-user.",
      "NoEcho": "True",
      "MinLength": "8"
    },
    "DbDataSize": {
      "Type": "Number",
      "ConstraintDescription": "Must be between 5GB and 16384GB.",
      "Default": "5",
      "Description": "Size in GiB of the RDS table-space to create. (UNUSED: present for compatibility-reasons only)",
      "MaxValue": "16384",
      "MinValue": "5"
    },
    "DbName": {
      "Type": "String",
      "Description": "Instance-name of the osTicket database.",
      "MinLength": "4",
      "MaxLength": "8"
    },
    "DbInstanceType": {
      "Type": "String",
      "AllowedValues": [
        "db.t2.small",
        "db.t2.medium",
        "db.r4.large",
        "db.r4.xlarge",
        "db.r4.2xlarge",
        "db.r4.4xlarge",
        "db.r4.8xlarge",
        "db.r4.16xlarge",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge"
      ],
      "Default": "db.t2.small",
      "Description": "Amazon RDS instance type"
    },
    "DbIsMultiAz": {
      "AllowedValues": [
        "false",
        "true"
      ],
      "Default": "false",
      "Description": "Select whether to create a multi-AZ RDS deployment. (UNUSED: present for compatibility-reasons only)",
      "Type": "String"
    },
    "DbInstanceName": {
      "Description": "Name of the osTicket database.",
      "Type": "String"
    },
    "DbSecurityGroup": {
      "Description": "List of security groups to apply to the RDS database.",
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "DbSubnets": {
      "Description": "Select at least two subnets, each in different Availability Zones",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "InstanceCount": {
      "Default": "2",
      "Description": "Number of cluster-instances to deploy",
      "MaxValue": "4",
      "MinValue": "1",
      "Type": "Number"
    },
    "MysqlVersion": {
      "AllowedValues": [
        "5.7.19",
        "5.7.17",
        "5.7.16",
        "5.7.12",
        "5.6.37",
        "5.6.35",
        "5.6.34",
        "5.6.29",
        "5.6.26"
      ],
      "Default": "5.7.12",
      "Description": " The X.Y.Z version of the Aurora MySQL database to deploy.",
      "Type": "String"
    },
    "TargetVPC": {
      "AllowedPattern": "^vpc-[0-9a-f]*$",
      "Description": "ID of the VPC to deploy osTicket components into.",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Mappings": {
    "ParamGroupFamilyMapping": {
      "5.7.12": {
        "family": "aurora-mysql5.7"
      },
      "5.6.37": {
        "family": "aurora5.6"
      }
    }
  },
  "Conditions": {
    "AtLeastThreeInstances": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceCount"
            },
            "3"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceCount"
            },
            "4"
          ]
        }
      ]
    },
    "AtLeastTwoInstances": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceCount"
            },
            "2"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceCount"
            },
            "3"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceCount"
            },
            "4"
          ]
        }
      ]
    },
    "FourInstances": {
      "Fn::Equals": [
        {
          "Ref": "InstanceCount"
        },
        "4"
      ]
    },
    "OneInstance": {
      "Fn::Equals": [
        {
          "Ref": "InstanceCount"
        },
        "1"
      ]
    },
    "SetInstanceName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "DbInstanceName"
            },
            ""
          ]
        }
      ]
    },
    "EngineMinorVer6": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "1",
            {
              "Fn::Split": [
                ".",
                {
                  "Ref": "MysqlVersion"
                }
              ]
            }
          ]
        },
        "6"
      ]
    }
  },
  "Resources": {
    "RDSDBClusParameterGroup": {
      "Type": "AWS::RDS::DBClusterParameterGroup",
      "Properties": {
        "Description": "Parameter Group to apply to the Aurora DB-cluster.",
        "Family": {
          "Fn::FindInMap": [
            "ParamGroupFamilyMapping",
            {
              "Ref": "MysqlVersion"
            },
            "family"
          ]
        },
        "Parameters": {
          "binlog_format": "OFF"
        }
      }
    },
    "RDSDBParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Parameter Group to apply to the Aurora DB instance.",
        "Family": {
          "Fn::FindInMap": [
            "ParamGroupFamilyMapping",
            {
              "Ref": "MysqlVersion"
            },
            "family"
          ]
        }
      }
    },
    "RDSdbCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "BackupRetentionPeriod": "7",
        "DBSubnetGroupName": {
          "Ref": "RDSdbSubnetGroup"
        },
        "DatabaseName": {
          "Ref": "DbName"
        },
        "DBClusterParameterGroupName": {
          "Ref": "RDSDBClusParameterGroup"
        },
        "Engine": "aurora-mysql",
        "EngineVersion": {
          "Ref": "MysqlVersion"
        },
        "MasterUserPassword": {
          "Ref": "DbAdminPass"
        },
        "MasterUsername": {
          "Ref": "DbAdminName"
        },
        "Port": "3306",
        "PreferredBackupWindow": "04:30-06:30",
        "PreferredMaintenanceWindow": "tue:07:00-tue:09:00",
        "Tags": [
          {
            "Key": "Description",
            "Value": "osTicket MySQL-flavored Aurora back-end database cluster"
          }
        ],
        "VpcSecurityGroupIds": {
          "Ref": "DbSecurityGroup"
        }
      }
    },
    "RDSdbInstance0": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "RDSdbCluster"
        },
        "DBInstanceClass": {
          "Ref": "DbInstanceType"
        },
        "DBInstanceIdentifier": {
          "Fn::If": [
            "SetInstanceName",
            {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "DbInstanceName"
                  },
                  "i0"
                ]
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBParameterGroupName": {
          "Ref": "RDSDBParameterGroup"
        },
        "DBSubnetGroupName": {
          "Ref": "RDSdbSubnetGroup"
        },
        "Engine": "aurora-mysql",
        "EngineVersion": {
          "Ref": "MysqlVersion"
        },
        "PubliclyAccessible": "false",
        "Tags": [
          {
            "Key": "Description",
            "Value": "osTicket MySQL-flavored Aurora back-end database cluster-instance"
          }
        ]
      }
    },
    "RDSdbInstance1": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "AtLeastTwoInstances",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "RDSdbCluster"
        },
        "DBInstanceClass": {
          "Ref": "DbInstanceType"
        },
        "DBInstanceIdentifier": {
          "Fn::If": [
            "SetInstanceName",
            {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "DbInstanceName"
                  },
                  "i1"
                ]
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBParameterGroupName": {
          "Ref": "RDSDBParameterGroup"
        },
        "DBSubnetGroupName": {
          "Ref": "RDSdbSubnetGroup"
        },
        "Engine": "aurora-mysql",
        "EngineVersion": {
          "Ref": "MysqlVersion"
        },
        "PubliclyAccessible": "false",
        "Tags": [
          {
            "Key": "Description",
            "Value": "osTicket MySQL-flavored Aurora back-end database cluster-instance"
          }
        ]
      }
    },
    "RDSdbInstance2": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "AtLeastThreeInstances",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "RDSdbCluster"
        },
        "DBInstanceClass": {
          "Ref": "DbInstanceType"
        },
        "DBInstanceIdentifier": {
          "Fn::If": [
            "SetInstanceName",
            {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "DbInstanceName"
                  },
                  "i2"
                ]
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBParameterGroupName": {
          "Ref": "RDSDBParameterGroup"
        },
        "DBSubnetGroupName": {
          "Ref": "RDSdbSubnetGroup"
        },
        "Engine": "aurora-mysql",
        "EngineVersion": {
          "Ref": "MysqlVersion"
        },
        "PubliclyAccessible": "false",
        "Tags": [
          {
            "Key": "Description",
            "Value": "osTicket MySQL-flavored Aurora back-end database cluster-instance"
          }
        ]
      }
    },
    "RDSdbInstance3": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "FourInstances",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "RDSdbCluster"
        },
        "DBInstanceClass": {
          "Ref": "DbInstanceType"
        },
        "DBInstanceIdentifier": {
          "Fn::If": [
            "SetInstanceName",
            {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "DbInstanceName"
                  },
                  "i3"
                ]
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBParameterGroupName": {
          "Ref": "RDSDBParameterGroup"
        },
        "DBSubnetGroupName": {
          "Ref": "RDSdbSubnetGroup"
        },
        "Engine": "aurora-mysql",
        "EngineVersion": {
          "Ref": "MysqlVersion"
        },
        "PubliclyAccessible": "false",
        "Tags": [
          {
            "Key": "Description",
            "Value": "osTicket MySQL-flavored Aurora back-end database cluster-instance"
          }
        ]
      }
    },
    "RDSdbSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance to be built into.",
        "SubnetIds": {
          "Ref": "DbSubnets"
        }
      }
    }
  },
  "Outputs": {
    "RdsEndpointAddressRO": {
      "Description": "DB's Read-Only endpoint-FQDN.",
      "Value": {
        "Fn::GetAtt": [
          "RDSdbCluster",
          "ReadEndpoint.Address"
        ]
      }
    },
    "RdsEndpointAddressRW": {
      "Description": "DB's Read/Write endpoint-FQDN.",
      "Value": {
        "Fn::GetAtt": [
          "RDSdbCluster",
          "Endpoint.Address"
        ]
      }
    },
    "RdsEndpointAddress": {
      "Description": "DB's (compatibility) endpoint-FQDN.",
      "Value": {
        "Fn::GetAtt": [
          "RDSdbCluster",
          "Endpoint.Address"
        ]
      }
    }
  }
}
